{"version":3,"sources":["types/game.ts","store/reducers/gameReducer.ts","types/mode.ts","store/reducers/modeReducer.ts","types/moves.ts","store/reducers/movesReducer.ts","types/cards.ts","store/reducers/categoriesReducer.ts","categories.ts","cards.ts","store/reducers/cardsReducer.ts","store/reducers/index.ts","store/index.ts","store/action-creator/mode.ts","store/action-creator/game.ts","store/action-creator/moves.ts","store/action-creator/cards.ts","store/action-creator/index.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/switch/Switcher.tsx","components/navbar/Navbar.tsx","pages/main/components/card/card.tsx","pages/main/components/cardsContainer/Cards.tsx","pages/main/components/category/category.tsx","pages/main/components/categoriesContainer/categoryContainer.tsx","components/footer/Footer.tsx","components/table/Table.tsx","pages/final-page/FinalPage.tsx","pages/pageBuilder/pageBuilder.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GameActionTypes","ModeActionTypes","initialState","isGameStarted","gameCards","activeCard","MovesActionTypes","mode","CardsActionTypes","movesNum","failures","categoriesList","categoryPath","categoryName","image","cards","word","translation","audioSrc","isCardGuessed","clicks","wrongClicks","cardsList","rootReducer","combineReducers","state","action","type","CHANGE_MODE","gameState","CHANGE_GAME_STATE","CHANGE_GAME_CARDS","payload","CHANGE_ACTIVE_CARD","movesState","CHANGE_MOVES_NUMBER","CHANGE_FAILURES_NUMBER","categoriesState","cardsState","CHANGE_CARDS_STATE","i","length","j","CHANGE_CARD_CLICKS","CHANGE_FAILED_CLICKS","REVERT_STATE","store","createStore","applyMiddleware","thunk","changeMode","changeGameState","changeGameCards","newSet","changeActiveCard","newCard","changeMovesNumber","changeFailuresNumber","changeCardsState","id","changeCardClicksState","changeCardFailuresState","revertCardsState","ModeActionCreator","GameActionCreator","MovesActionCreator","CardsActionCreator","useActions","dispatch","useDispatch","bindActionCreators","ActionCreators","useTypedSelector","useSelector","Switcher","className","htmlFor","aria-label","onClick","Navbar","isOpen","setSidebarState","showSidebar","useState","btnClass","changeState","e","stopPropagation","to","map","category","idx","Card","card","click","flip","setFlip","audio","Audio","start","play","revertCard","flipCard","onMouseLeave","role","tabIndex","onKeyDown","src","alt","Cards","cId","categoryId","stars","setStars","failureAudio","correctAudio","errorAudio","successAudio","history","useHistory","arr","forEach","push","game","clickedCard","includes","oldArray","indexOfNext","indexOf","nextAudio","playNext","shuffledArr","array","randomIndex","currentIndex","Math","floor","random","shuffle","elem","Category","path","data","CategoryContainer","index","Footer","href","target","rel","Table","FinalPage","useEffect","setTimeout","location","PageBuilder","pageType","isSidebarOpen","closeSidebar","App","setName","setPath","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a0f61ed.chunk.js","sourcesContent":["/* eslint-disable max-len */\nexport interface GameState {\n    isGameStarted: boolean,\n    gameCards: string[],\n    activeCard: string\n}\n\nexport enum GameActionTypes {\n    CHANGE_GAME_STATE = 'CHANGE_GAME_STATE',\n    CHANGE_GAME_CARDS = 'CHANGE_GAME_CARDS',\n    CHANGE_ACTIVE_CARD = 'CHANGE_ACTIVE_CARD',\n}\n\ninterface changeGCardsAction {\n    type: GameActionTypes.CHANGE_GAME_CARDS,\n    payload: string[],\n}\n\ninterface ChangeGameAction {\n    type: GameActionTypes.CHANGE_GAME_STATE,\n}\n\ninterface ChangeACardAction {\n    type: GameActionTypes.CHANGE_ACTIVE_CARD,\n    payload: string,\n}\n\nexport type GameAction = ChangeGameAction | changeGCardsAction | ChangeACardAction\n","import { GameAction, GameActionTypes, GameState } from '../../types/game';\n\nconst initialState: GameState = {\n  isGameStarted: false,\n  gameCards: [],\n  activeCard: '',\n};\n\nexport const GameReducer = (state = initialState, action: GameAction): GameState => {\n  switch (action.type) {\n    case GameActionTypes.CHANGE_GAME_STATE:\n      return {\n        ...state, isGameStarted: !state.isGameStarted,\n      };\n    case GameActionTypes.CHANGE_GAME_CARDS:\n      return {\n        ...state, gameCards: action.payload,\n      };\n    case GameActionTypes.CHANGE_ACTIVE_CARD:\n      return {\n        ...state, activeCard: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export interface ModeState {\n    mode: string,\n}\n\nexport enum ModeActionTypes {\n    CHANGE_MODE = 'CHANGE_MODE',\n}\n\ninterface ChangeModeAction {\n    type: ModeActionTypes.CHANGE_MODE,\n}\n\nexport type ModeAction = ChangeModeAction;\n","import { ModeAction, ModeActionTypes, ModeState } from '../../types/mode';\n\nconst initialState: ModeState = {\n  mode: 'train',\n};\n\nexport const ModeReducer = (state = initialState, action: ModeAction): ModeState => {\n  switch (action.type) {\n    case ModeActionTypes.CHANGE_MODE:\n      if (state.mode === 'train') {\n        return { mode: 'game' };\n      }\n      return { mode: 'train' };\n    default:\n      return state;\n  }\n};\n","/* eslint-disable max-len */\nexport interface MovesState {\n    movesNum: number,\n    failures: number,\n}\n\nexport enum MovesActionTypes {\n    CHANGE_MOVES_NUMBER = 'CHANGE_MOVES_NUMBER',\n    CHANGE_FAILURES_NUMBER = 'CHANGE_FAILURES_NUMBER',\n}\n\ninterface changeMovesNumAction {\n    type: MovesActionTypes.CHANGE_MOVES_NUMBER,\n    payload: string[],\n}\n\ninterface ChangeFailuresNumAction {\n    type: MovesActionTypes.CHANGE_FAILURES_NUMBER,\n}\n\ninterface ChangeMovesNumAction {\n    type: MovesActionTypes.CHANGE_MOVES_NUMBER,\n}\n\ninterface ChangeFailuresNumAction {\n    type: MovesActionTypes.CHANGE_FAILURES_NUMBER,\n}\n\nexport type MovesAction = ChangeMovesNumAction | ChangeFailuresNumAction;\n","import { MovesAction, MovesActionTypes, MovesState } from '../../types/moves';\n\nconst initialState: MovesState = {\n  movesNum: 0,\n  failures: 0,\n};\n\nexport const MovesReducer = (state = initialState, action: MovesAction): MovesState => {\n  switch (action.type) {\n    case MovesActionTypes.CHANGE_MOVES_NUMBER:\n      return {\n        ...state, movesNum: state.movesNum + 1,\n      };\n    case MovesActionTypes.CHANGE_FAILURES_NUMBER:\n      return {\n        ...state, failures: state.failures + 1,\n      };\n    default:\n      return state;\n  }\n};\n","import cards from '../cards';\nimport { CardState } from './card';\n\nexport interface CardsState {\n    cardsList: CardState[][],\n}\n\nexport enum CardsActionTypes {\n    CHANGE_CARDS_STATE = 'CHANGE_CARDS_STATE',\n    CHANGE_CARD_CLICKS = 'CHANGE_CARD_CLICKS',\n    CHANGE_FAILED_CLICKS = 'CHANGE_FAILED_CLICKS',\n    REVERT_STATE = 'REVERT_STATE',\n}\n\ninterface changeCardsStateAction {\n    type: CardsActionTypes.CHANGE_CARDS_STATE,\n    // payload: typeof cards,\n    payload: string,\n}\n\ninterface changeCardClicksAction {\n    type: CardsActionTypes.CHANGE_CARD_CLICKS,\n    payload: string,\n}\n\ninterface changeFailedCardsAction {\n    type: CardsActionTypes.CHANGE_FAILED_CLICKS,\n    payload: string,\n}\n\ninterface revertStateAction {\n    type: CardsActionTypes.REVERT_STATE,\n}\n\nexport type CardsAction = changeCardsStateAction | changeCardClicksAction |\nchangeFailedCardsAction |\nrevertStateAction;\n","import { CategoriesState } from '../../types/categories';\nimport categories from '../../categories';\n\nconst initialState: CategoriesState = {\n  categoriesList: categories,\n};\n\nexport const CategoriesReducer = (state = initialState): CategoriesState => state;\n","const categories = [\n  {\n    categoryPath: 'action1',\n    categoryName: 'Action (set A)',\n    image: 'img/dance.jpg',\n  },\n  {\n    categoryPath: 'action2',\n    categoryName: 'Action (set A)',\n    image: 'img/play.jpg',\n  },\n  {\n    categoryPath: 'animal1',\n    categoryName: 'Animal (set A)',\n    image: 'img/cat.jpg',\n  },\n  {\n    categoryPath: 'animal2',\n    categoryName: 'Animal (set B)',\n    image: 'img/frog.jpg',\n  },\n  {\n    categoryPath: 'clothes',\n    categoryName: 'Clothes',\n    image: 'img/dress.jpg',\n  },\n  {\n    categoryPath: 'emotions',\n    categoryName: 'Emotions',\n    image: 'img/angry.jpg',\n  },\n  {\n    categoryPath: 'food',\n    categoryName: 'Food',\n    image: 'img/taco.jpg',\n  },\n  {\n    categoryPath: 'places',\n    categoryName: 'Places',\n    image: 'img/city.jpg',\n  },\n];\n\nexport default categories;\n","const cards = [\n  [\n    {\n      word: 'cry',\n      translation: 'плакать',\n      image: 'img/cry.jpg',\n      audioSrc: 'audio/cry.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'dance',\n      translation: 'танцевать',\n      image: 'img/dance.jpg',\n      audioSrc: 'audio/dance.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'dive',\n      translation: 'нырять',\n      image: 'img/dive.jpg',\n      audioSrc: 'audio/dive.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'draw',\n      translation: 'рисовать',\n      image: 'img/draw.jpg',\n      audioSrc: 'audio/draw.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'fish',\n      translation: 'ловить рыбу',\n      image: 'img/fish.jpg',\n      audioSrc: 'audio/fish.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'fly',\n      translation: 'летать',\n      image: 'img/fly.jpg',\n      audioSrc: 'audio/fly.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'hug',\n      translation: 'обнимать',\n      image: 'img/hug.jpg',\n      audioSrc: 'audio/hug.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'jump',\n      translation: 'прыгать',\n      image: 'img/jump.jpg',\n      audioSrc: 'audio/jump.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ], [\n    {\n      word: 'open',\n      translation: 'открывать',\n      image: 'img/open.jpg',\n      audioSrc: 'audio/open.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'play',\n      translation: 'играть',\n      image: 'img/play.jpg',\n      audioSrc: 'audio/play.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'point',\n      translation: 'указывать',\n      image: 'img/point.jpg',\n      audioSrc: 'audio/point.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'ride',\n      translation: 'ездить',\n      image: 'img/ride.jpg',\n      audioSrc: 'audio/ride.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'run',\n      translation: 'бегать',\n      image: 'img/run.jpg',\n      audioSrc: 'audio/run.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'sing',\n      translation: 'петь',\n      image: 'img/sing.jpg',\n      audioSrc: 'audio/sing.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'skip',\n      translation: 'пропускать, прыгать',\n      image: 'img/skip.jpg',\n      audioSrc: 'audio/skip.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'swim',\n      translation: 'плавать',\n      image: 'img/swim.jpg',\n      audioSrc: 'audio/swim.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ], [\n    {\n      word: 'cat',\n      translation: 'кот',\n      image: 'img/cat.jpg',\n      audioSrc: 'audio/cat.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'chick',\n      translation: 'цыплёнок',\n      image: 'img/chick.jpg',\n      audioSrc: 'audio/chick.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'chicken',\n      translation: 'курица',\n      image: 'img/chicken.jpg',\n      audioSrc: 'audio/chicken.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'dog',\n      translation: 'собака',\n      image: 'img/dog.jpg',\n      audioSrc: 'audio/dog.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'horse',\n      translation: 'лошадь',\n      image: 'img/horse.jpg',\n      audioSrc: 'audio/horse.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'pig',\n      translation: 'свинья',\n      image: 'img/pig.jpg',\n      audioSrc: 'audio/pig.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'rabbit',\n      translation: 'кролик',\n      image: 'img/rabbit.jpg',\n      audioSrc: 'audio/rabbit.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'sheep',\n      translation: 'овца',\n      image: 'img/sheep.jpg',\n      audioSrc: 'audio/sheep.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ], [\n    {\n      word: 'bird',\n      translation: 'птица',\n      image: 'img/bird.jpg',\n      audioSrc: 'audio/bird.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'fish',\n      translation: 'рыба',\n      image: 'img/fish1.jpg',\n      audioSrc: 'audio/fish.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'frog',\n      translation: 'жаба',\n      image: 'img/frog.jpg',\n      audioSrc: 'audio/frog.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'giraffe',\n      translation: 'жирафа',\n      image: 'img/giraffe.jpg',\n      audioSrc: 'audio/giraffe.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'lion',\n      translation: 'лев',\n      image: 'img/lion.jpg',\n      audioSrc: 'audio/lion.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'mouse',\n      translation: 'мышь',\n      image: 'img/mouse.jpg',\n      audioSrc: 'audio/mouse.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'turtle',\n      translation: 'черепаха',\n      image: 'img/turtle.jpg',\n      audioSrc: 'audio/turtle.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'dolphin',\n      translation: 'дельфин',\n      image: 'img/dolphin.jpg',\n      audioSrc: 'audio/dolphin.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ], [\n    {\n      word: 'skirt',\n      translation: 'юбка',\n      image: 'img/skirt.jpg',\n      audioSrc: 'audio/skirt.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'pants',\n      translation: 'брюки',\n      image: 'img/pants.jpg',\n      audioSrc: 'audio/pants.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'blouse',\n      translation: 'блузка',\n      image: 'img/blouse.jpg',\n      audioSrc: 'audio/blouse.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'dress',\n      translation: 'платье',\n      image: 'img/dress.jpg',\n      audioSrc: 'audio/dress.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'boot',\n      translation: 'ботинок',\n      image: 'img/boot.jpg',\n      audioSrc: 'audio/boot.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'shirt',\n      translation: 'рубашка',\n      image: 'img/shirt.jpg',\n      audioSrc: 'audio/shirt.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'coat',\n      translation: 'пальто',\n      image: 'img/coat.jpg',\n      audioSrc: 'audio/coat.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'shoe',\n      translation: 'туфли',\n      image: 'img/shoe.jpg',\n      audioSrc: 'audio/shoe.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ], [\n    {\n      word: 'sad',\n      translation: 'грустный',\n      image: 'img/sad.jpg',\n      audioSrc: 'audio/sad.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'angry',\n      translation: 'сердитый',\n      image: 'img/angry.jpg',\n      audioSrc: 'audio/angry.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'happy',\n      translation: 'счастливый',\n      image: 'img/happy.jpg',\n      audioSrc: 'audio/happy.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'tired',\n      translation: 'уставший',\n      image: 'img/tired.jpg',\n      audioSrc: 'audio/tired.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'surprised',\n      translation: 'удивлённый',\n      image: 'img/surprised.jpg',\n      audioSrc: 'audio/surprised.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'scared',\n      translation: 'испуганный',\n      image: 'img/scared.jpg',\n      audioSrc: 'audio/scared.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'smile',\n      translation: 'улыбка',\n      image: 'img/smile.jpg',\n      audioSrc: 'audio/smile.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'laugh',\n      translation: 'смех',\n      image: 'img/laugh.jpg',\n      audioSrc: 'audio/laugh.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ], [\n    {\n      word: 'cookie',\n      translation: 'печенье',\n      image: 'img/cookie.jpg',\n      audioSrc: 'audio/cookie.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'noodles',\n      translation: 'лапша',\n      image: 'img/noodles.jpg',\n      audioSrc: 'audio/noodles.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'pancake',\n      translation: 'оладушек',\n      image: 'img/pancake.jpg',\n      audioSrc: 'audio/pancake.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'pizza',\n      translation: 'пицца',\n      image: 'img/pizza.jpg',\n      audioSrc: 'audio/pizza.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'salad',\n      translation: 'салат',\n      image: 'img/salad.jpg',\n      audioSrc: 'audio/salad.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'taco',\n      translation: 'тако',\n      image: 'img/taco.jpg',\n      audioSrc: 'audio/taco.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'cheese',\n      translation: 'сыр',\n      image: 'img/cheese.jpg',\n      audioSrc: 'audio/cheese.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'hamburger',\n      translation: 'гамбургер',\n      image: 'img/hamburger.jpg',\n      audioSrc: 'audio/hamburger.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ], [\n    {\n      word: 'beach',\n      translation: 'пляж',\n      image: 'img/beach.jpg',\n      audioSrc: 'audio/beach.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'bridge',\n      translation: 'мост',\n      image: 'img/bridge.jpg',\n      audioSrc: 'audio/bridge.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'desert',\n      translation: 'Пустыня',\n      image: 'img/desert.jpg',\n      audioSrc: 'audio/desert.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'farm',\n      translation: 'ферма',\n      image: 'img/farm.jpg',\n      audioSrc: 'audio/farm.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'office',\n      translation: 'офис',\n      image: 'img/office.jpg',\n      audioSrc: 'audio/office.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'park',\n      translation: 'парк',\n      image: 'img/park.jpg',\n      audioSrc: 'audio/park.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'forest',\n      translation: 'лес',\n      image: 'img/forest.jpg',\n      audioSrc: 'audio/forest.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n    {\n      word: 'city',\n      translation: 'город',\n      image: 'img/city.jpg',\n      audioSrc: 'audio/city.mp3',\n      isCardGuessed: false,\n      clicks: 0,\n      wrongClicks: 0,\n    },\n  ],\n];\n\nexport default cards;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\nimport cards from '../../cards';\nimport { CardsAction, CardsActionTypes, CardsState } from '../../types/cards';\n\nconst initialState: CardsState = {\n  cardsList: cards,\n};\n\nexport const CardsReducer = (state = initialState, action: CardsAction): CardsState => {\n  switch (action.type) {\n    case CardsActionTypes.CHANGE_CARDS_STATE:\n      for (let i = 0; i < state.cardsList.length; i++) {\n        for (let j = 0; j < state.cardsList[i].length; j++) {\n          if (!state.cardsList[i][j].isCardGuessed) {\n            state.cardsList[i][j].isCardGuessed = (state.cardsList[i][j].word === action.payload);\n          }\n        }\n      }\n      return {\n        ...state,\n      };\n    case CardsActionTypes.CHANGE_CARD_CLICKS:\n      for (let i = 0; i < state.cardsList.length; i++) {\n        for (let j = 0; j < state.cardsList[i].length; j++) {\n          if (state.cardsList[i][j].word === action.payload) {\n            state.cardsList[i][j].clicks += 1;\n          }\n        }\n      }\n      return {\n        ...state,\n      };\n    case CardsActionTypes.CHANGE_FAILED_CLICKS:\n      for (let i = 0; i < state.cardsList.length; i++) {\n        for (let j = 0; j < state.cardsList[i].length; j++) {\n          if (state.cardsList[i][j].word === action.payload) {\n            state.cardsList[i][j].wrongClicks += 1;\n          }\n        }\n      }\n      return {\n        ...state,\n      };\n    case CardsActionTypes.REVERT_STATE:\n      for (let i = 0; i < state.cardsList.length; i++) {\n        for (let j = 0; j < state.cardsList[i].length; j++) {\n          state.cardsList[i][j].isCardGuessed = false;\n        }\n      }\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { GameReducer } from './gameReducer';\nimport { ModeReducer } from './modeReducer';\nimport { MovesReducer } from './movesReducer';\nimport { CategoriesReducer } from './categoriesReducer';\nimport { CardsReducer } from './cardsReducer';\n\nexport const rootReducer = combineReducers({\n  mode: ModeReducer,\n  gameState: GameReducer,\n  movesState: MovesReducer,\n  categoriesState: CategoriesReducer,\n  cardsState: CardsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type RootState = ReturnType<typeof store.getState>\n","import { ModeAction, ModeActionTypes } from '../../types/mode';\n\nexport function changeMode(): ModeAction {\n  return { type: ModeActionTypes.CHANGE_MODE };\n}\n","import { GameAction, GameActionTypes } from '../../types/game';\n\nexport function changeGameState(): GameAction {\n  return { type: GameActionTypes.CHANGE_GAME_STATE };\n}\n\nexport function changeGameCards(newSet: string[]): GameAction {\n  return { type: GameActionTypes.CHANGE_GAME_CARDS, payload: newSet };\n}\n\nexport function changeActiveCard(newCard: string): GameAction {\n  return { type: GameActionTypes.CHANGE_ACTIVE_CARD, payload: newCard };\n}\n","import { MovesAction, MovesActionTypes } from '../../types/moves';\n\nexport function changeMovesNumber(): MovesAction {\n  return { type: MovesActionTypes.CHANGE_MOVES_NUMBER };\n}\n\nexport function changeFailuresNumber(): MovesAction {\n  return { type: MovesActionTypes.CHANGE_FAILURES_NUMBER };\n}\n","/* eslint-disable no-plusplus */\nimport cards from '../../cards';\nimport { CardsAction, CardsActionTypes } from '../../types/cards';\n\nexport function changeCardsState(id: string): CardsAction {\n  return { type: CardsActionTypes.CHANGE_CARDS_STATE, payload: id };\n}\n\nexport function changeCardClicksState(id: string): CardsAction {\n  return { type: CardsActionTypes.CHANGE_CARD_CLICKS, payload: id };\n}\n\nexport function changeCardFailuresState(id: string): CardsAction {\n  return { type: CardsActionTypes.CHANGE_FAILED_CLICKS, payload: id };\n}\n\nexport function revertCardsState(): CardsAction {\n  return { type: CardsActionTypes.REVERT_STATE };\n}\n","import * as ModeActionCreator from './mode';\nimport * as GameActionCreator from './game';\nimport * as MovesActionCreator from './moves';\nimport * as CardsActionCreator from './cards';\n\nexport default {\n  ...ModeActionCreator,\n  ...GameActionCreator,\n  ...MovesActionCreator,\n  ...CardsActionCreator,\n};\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ActionCreators from '../store/action-creator';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(ActionCreators, dispatch);\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useActions } from '../../hooks/useActions';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport './switcher.scss';\n\nconst Switcher = () => {\n  const { mode } = useTypedSelector((state) => state.mode);\n  const { changeMode } = useActions();\n\n  return (\n    <div className=\"switcher\">\n      <input type=\"checkbox\" id=\"switch-checkbox\" />\n      <label id=\"button\" htmlFor=\"switch-checkbox\">\n        { mode === 'train'\n        && <button type=\"button\" id=\"knob\" aria-label=\"Switch mode\" onClick={changeMode} />}\n        { mode === 'game'\n        && <button type=\"button\" id=\"knob-active\" aria-label=\"Switch mode\" onClick={changeMode} />}\n        <div id=\"subscribe\">Game</div>\n        <div id=\"alright\">Train</div>\n      </label>\n    </div>\n  );\n};\n\nexport default Switcher;\n","/*eslint-disable*/\nimport { Link } from 'react-router-dom';\nimport './navbar.scss';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport React, { useState } from 'react';\nimport Switcher from '../switch/Switcher';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { useActions } from '../../hooks/useActions';\n\ntype SidebarState = {\n    isOpen: boolean,\n    setSidebarState: any,\n};\n\nconst Navbar = ({ isOpen, setSidebarState }: SidebarState): JSX.Element => {\n    const { categoriesList } = useTypedSelector((state) => state.categoriesState);\n    const { isGameStarted } = useTypedSelector((state) => state.gameState);\n    const { revertCardsState } = useActions();\n    const showSidebar = () => setSidebarState(!isOpen);\n    const { changeGameState } = useActions();\n    const [btnClass, setBtnClass] = useState('nav-text');\n    const changeState = () => {\n        if (isGameStarted) {\n            changeGameState();\n            revertCardsState();\n        }\n    }\n    return (\n        <>\n            <div className=\"navbar\" >\n                <div className=\"menu-bars\">\n                    <FaIcons.FaBars onClick={showSidebar} />\n                </div>\n                <Switcher />\n                {/* <button>\n                <Link to=\"/stats\">\n                Stats\n                        </Link>\n                    </button> */}\n            </div>\n\n            <nav className={isOpen ? 'nav-menu active' : 'nav-menu'} onClick={e => e.stopPropagation()}>\n                <ul className='nav-menu-items' onClick={showSidebar}>\n                    <li key={100} className=\"navbar-toggle\">\n                        <div className=\"menu-bars\">\n                            <AiIcons.AiOutlineClose />\n                        </div>\n                    </li>\n                    <li key={101} className={btnClass} onClick={changeState}>\n                        <Link to=\"/\">\n                            <span>Home</span>\n                        </Link>\n                    </li>\n                    {\n                        categoriesList.map((category: { categoryPath: string; categoryName: string; image:string; }, idx: number) => {\n                            const { categoryName, categoryPath, image } = category;\n                            return (\n                                <li key={idx} className={btnClass} onClick={changeState}>\n                                    <Link to={categoryPath}>\n                                        <span>{categoryName}</span>\n                                    </Link>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </nav>\n        </>\n    )\n};\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport { BsFillMicFill, BsArrowClockwise } from 'react-icons/bs';\nimport './card.scss';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport { CardState } from '../../../../types/card';\n\ntype Card = {\n  card: CardState,\n  click: (word: string) => void,\n};\n\nconst Card = ({ card, click }: Card): JSX.Element => {\n  const {\n    word, translation, image, audioSrc, isCardGuessed,\n  } = card;\n  const { mode } = useTypedSelector((state) => state.mode);\n  const [flip, setFlip] = useState(false);\n  const audio = new Audio(audioSrc);\n  const cStyle = 'card__front game ';\n  const start = () => {\n    audio.play();\n  };\n\n  const revertCard = () => setFlip(!flip);\n\n  const flipCard = () => (flip ? setFlip(!flip) : '');\n\n  if (mode === 'train') {\n    return (\n      <div className={flip ? 'card-container flipped' : 'card-container'} onMouseLeave={flipCard}>\n        <div className=\"card\">\n          <div role=\"button\" className=\"card__front\" tabIndex={0} onClick={start} onKeyDown={start}>\n            <div className=\"img-wrapper\">\n              <img className=\"card-img\" src={image} alt={word} />\n            </div>\n            <div className=\"card-description\">\n              <div className=\"card-name\">{word}</div>\n              <div className=\"card-icons\">\n                <BsFillMicFill className=\"audio-icon\" onClick={start} />\n                <BsArrowClockwise className=\"revert-icon\" onClick={revertCard} />\n              </div>\n            </div>\n          </div>\n          <div className=\"card__back\">\n            <div className=\"img-wrapper\">\n              <img className=\"card-img\" src={image} alt={word} />\n            </div>\n            <div className=\"card-description\">\n              <div className=\"card-name\">{translation}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={flip ? 'card-container flipped' : 'card-container'} onMouseLeave={flipCard}>\n      <div role=\"button\" className={isCardGuessed ? 'card hidden' : 'card'} tabIndex={0} onClick={() => click(word)} onKeyDown={() => click(word)}>\n        <div className={cStyle}>\n          <div className=\"img-wrapper\">\n            <img className=\"card-img\" src={image} alt={word} />\n          </div>\n          <div className=\"card-description hidden\">\n            <div className=\"card-name\">{word}</div>\n            <div className=\"card-icons\">\n              <BsFillMicFill className=\"audio-icon\" onClick={start} />\n              <BsArrowClockwise className=\"revert-icon\" onClick={revertCard} />\n            </div>\n          </div>\n        </div>\n        <div className=\"card__back\">\n          <div className=\"img-wrapper\">\n            <img className=\"card-img\" src={image} alt={word} />\n          </div>\n          <div className=\"card-description\">\n            <div className=\"card-name\">{translation}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-param-reassign */\n\n// /*eslint-disable*/\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useActions } from '../../../../hooks/useActions';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport Card from '../card/card';\nimport './cards.scss';\n\ntype Category = {\n  categoryId: number,\n}\n\nconst shuffle = (array: string[]) => {\n  let currentIndex = array.length;\n  let randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= currentIndex;\n\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n};\n\nconst Cards = (cId: Category) => {\n  const { changeCardsState } = useActions();\n  const { changeCardClicksState } = useActions();\n  const { changeCardFailuresState } = useActions();\n  const { categoryId } = cId;\n  const { cardsList } = useTypedSelector((state) => state.cardsState);\n  const initialArray: number [] = [];\n  const [stars, setStars] = useState(initialArray);\n  const cards = cardsList[categoryId];\n  const { mode } = useTypedSelector((state) => state.mode);\n  const { isGameStarted } = useTypedSelector((state) => state.gameState);\n  const { gameCards } = useTypedSelector((state) => state.gameState);\n  const { activeCard } = useTypedSelector((state) => state.gameState);\n  const failureAudio = new Audio('audio/failure.mp3');\n  const correctAudio = new Audio('audio/correct.mp3');\n  const errorAudio = new Audio('audio/error.mp3');\n  const successAudio = new Audio('audio/success.mp3');\n  const history = useHistory();\n  const { changeGameState } = useActions();\n  const { changeGameCards } = useActions();\n  const { failures } = useTypedSelector((state) => state.movesState);\n  const { changeMovesNumber } = useActions();\n  const { changeActiveCard } = useActions();\n  const { changeFailuresNumber } = useActions();\n  const arr: string[] = [];\n  cards.forEach((card) => {\n    arr.push(card.audioSrc);\n  });\n\n  const startGame = () => {\n    const shuffledArr = shuffle(arr);\n    changeGameState();\n    changeGameCards(shuffledArr);\n    changeActiveCard(shuffledArr[0]);\n    const audio = new Audio(shuffledArr[0]);\n    audio.play();\n  };\n\n  const playNext = (nextAudio: string) => {\n    const next = new Audio(nextAudio);\n    next.play();\n  };\n\n  const game = (clickedCard: string) => {\n    changeMovesNumber();\n    changeCardClicksState(clickedCard);\n    if (isGameStarted) {\n      if (activeCard.includes(clickedCard)) {\n        setStars((oldArray) => [...oldArray, 1]);\n        changeCardsState(clickedCard);\n        correctAudio.play();\n        const indexOfNext = gameCards.indexOf(activeCard) + 1;\n        if (indexOfNext < 8) {\n          const nextAudio = gameCards[indexOfNext];\n          changeActiveCard(nextAudio);\n          playNext(nextAudio);\n        } else if (failures > 0) {\n          failureAudio.play();\n          history.push('/final');\n        } else {\n          successAudio.play();\n          history.push('/final');\n        }\n      } else {\n        setStars((oldArray) => [...oldArray, 0]);\n        changeCardFailuresState(clickedCard);\n        changeFailuresNumber();\n        errorAudio.play();\n      }\n    }\n  };\n\n  const repeatSound = () => {\n    const currentAudio = new Audio(activeCard);\n    currentAudio.play();\n  };\n\n  return (\n    <div className=\"cards-page\">\n      <div className=\"cards-field\">\n        { cards.map((card: any, idx: number) => <Card key={idx} card={card} click={game} />)}\n      </div>\n      { mode === 'game' && !isGameStarted && (\n      <button type=\"button\" className=\"start-btn\" onClick={startGame}>\n        Start\n      </button>\n      )}\n      { mode === 'game' && isGameStarted\n      && (\n      <div className=\"game-icons\">\n        <button type=\"button\" className=\"repeat-btn\" onClick={repeatSound}>\n          <img src=\"img/loop.jpg\" alt=\"Loop\" />\n        </button>\n        <div className=\"icons\">\n          {stars.map((elem, idx) => (elem === 0 ? <img key={idx} alt=\"Empty heart\" src=\"img/empty-heart.jpg\" /> : (\n            <img\n              key={idx}\n              alt=\"Heart\"\n              src=\"img/heart.jpg\"\n            />\n          )))}\n        </div>\n      </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cards;\n","import './category.scss';\nimport { Link } from 'react-router-dom';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\n\ntype Category = {\n    category: string,\n    path: string,\n    data: string,\n};\n\nconst Category = ({ category, path, data }: Category): JSX.Element => {\n  const { mode } = useTypedSelector((state) => state.mode);\n\n  if (mode === 'train') {\n    return (\n      <Link to={path} className=\"category-link\">\n        <div className=\"category\">\n          <div className=\"img-wrapper\">\n            <img className=\"card-img\" src={`${data}`} alt={data} />\n          </div>\n          <div className=\"card-description\">\n            {category}\n          </div>\n        </div>\n      </Link>\n    );\n  }\n  return (\n    <Link to={path} className=\"category-link\">\n      <div className=\"category game-mode\">\n        <div className=\"img-wrapper\">\n          <img className=\"card-img\" src={`${data}`} alt={data} />\n        </div>\n        <div className=\"card-description\">\n          {category}\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Category;\n","import React, { useState } from 'react';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport Category from '../category/category';\nimport './categoryConteiner.scss';\n\nconst CategoryContainer = () => {\n  const { categoriesList } = useTypedSelector((state) => state.categoriesState);\n  return (\n    <div className=\"categories-container\">\n      {categoriesList.map((category, index: React.Key | null | undefined) => {\n        const { categoryPath, categoryName, image } = category;\n        return (\n          <Category\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            category={categoryName}\n            path={`/${categoryPath}`}\n            data={image}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CategoryContainer;\n","import './footer.scss';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"footer-container\">\n      <a className=\"github\" href=\"https://github.com/NugramN\" target=\"_blank\" rel=\"noopener noreferrer\">NugramN</a>\n      <div className=\"year\">2021Q1</div>\n      <a className=\"rss\" href=\"https://rs.school/js/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <span className=\"rss-year\">2021</span>\n      </a>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import './table.scss';\n\nconst Table = () => (\n  <div className=\"table-wrapper\">\n    <table className=\"fl-table\">\n      <thead>\n        <tr>\n          <th>Category/Word</th>\n          <th>Translation</th>\n          <th>Trained</th>\n          <th>Correct</th>\n          <th>Incorrect</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Content 1</td>\n          <td>Content 1</td>\n          <td>Content 1</td>\n          <td>Content 1</td>\n          <td>Content 1</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n\nexport default Table;\n","/* eslint-disable no-restricted-globals */\nimport { useEffect } from 'react';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\n\nconst FinalPage = () => {\n  const { failures } = useTypedSelector((state) => state.movesState);\n\n  useEffect(() => {\n    setTimeout(() => {\n      location.href = '/';\n    }, 2000);\n  });\n\n  return (\n    <div className=\"final-page\">\n      { failures > 0 ? (\n        <div className=\"result-wrapper\">\n          <img src=\"img/failure.jpg\" alt=\"Failure\" />\n          <p>\n            You have done\n            {' '}\n            {failures}\n            {' '}\n            mistake(s)!\n          </p>\n        </div>\n      ) : (\n        <div className=\"result-wrapper\">\n          <img src=\"img/dancing.jpg\" alt=\"Success\" />\n          <p>\n            Congrats!\n            You are the real winner today!\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FinalPage;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/Navbar';\nimport { useActions } from '../../hooks/useActions';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport Cards from '../main/components/cardsContainer/Cards';\nimport CategoryContainer from '../main/components/categoriesContainer/categoryContainer';\nimport './pageBuilder.scss';\nimport Footer from '../../components/footer/Footer';\nimport Table from '../../components/table/Table';\nimport FinalPage from '../final-page/FinalPage';\n\ntype Props = {\n  pageType: string,\n  id: number,\n}\n\nconst PageBuilder = ({\n  pageType, id,\n}: Props) => {\n  const { mode } = useTypedSelector((state) => state.mode);\n  const { movesNum } = useTypedSelector((state) => state.movesState);\n  const { failures } = useTypedSelector((state) => state.movesState);\n  const [isSidebarOpen, setSidebarState] = useState(false);\n  const { changeMovesNumber } = useActions();\n  const { changeFailuresNumber } = useActions();\n\n  const closeSidebar = () => {\n    setSidebarState(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <Navbar isOpen={isSidebarOpen} setSidebarState={setSidebarState} />\n      { pageType === 'categories'\n      && (\n      <div className=\"main-page\" onClick={closeSidebar}>\n        <CategoryContainer />\n      </div>\n      )}\n      { pageType === 'cards'\n      && (\n      <div className=\"category-page\" onClick={closeSidebar}>\n        <Cards categoryId={id} />\n      </div>\n      )}\n      { pageType === 'final-page'\n      && <FinalPage />}\n      { pageType === 'stats'\n      && (\n      <div className=\"category-page\" onClick={closeSidebar}>\n        <Table />\n      </div>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default PageBuilder;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport PageBuilder from './pages/pageBuilder/pageBuilder';\nimport cards from './cards';\nimport { useTypedSelector } from './hooks/useTypedSelector';\n\nfunction App() {\n  const [cardss, setCards] = useState([\n    {\n      setName: 'Action (set A)',\n      setPath: 'action1',\n      data: [\n        {\n          word: 'cry',\n          translation: 'плакать',\n          image: 'img/cry.jpg',\n          audioSrc: 'audio/cry.mp3',\n        },\n        {\n          word: 'dance',\n          translation: 'танцевать',\n          image: 'img/dance.jpg',\n          audioSrc: 'audio/dance.mp3',\n        },\n        {\n          word: 'dive',\n          translation: 'нырять',\n          image: 'img/dive.jpg',\n          audioSrc: 'audio/dive.mp3',\n        },\n        {\n          word: 'draw',\n          translation: 'рисовать',\n          image: 'img/draw.jpg',\n          audioSrc: 'audio/draw.mp3',\n        },\n        {\n          word: 'fish',\n          translation: 'ловить рыбу',\n          image: 'img/fish.jpg',\n          audioSrc: 'audio/fish.mp3',\n        },\n        {\n          word: 'fly',\n          translation: 'летать',\n          image: 'img/fly.jpg',\n          audioSrc: 'audio/fly.mp3',\n        },\n        {\n          word: 'hug',\n          translation: 'обнимать',\n          image: 'img/hug.jpg',\n          audioSrc: 'audio/hug.mp3',\n        },\n        {\n          word: 'jump',\n          translation: 'прыгать',\n          image: 'img/jump.jpg',\n          audioSrc: 'audio/jump.mp3',\n        },\n      ],\n    },\n    {\n      setName: 'Action (set B)',\n      setPath: 'action2',\n      data: [\n        {\n          word: 'open',\n          translation: 'открывать',\n          image: 'img/open.jpg',\n          audioSrc: 'audio/open.mp3',\n        },\n        {\n          word: 'play',\n          translation: 'играть',\n          image: 'img/play.jpg',\n          audioSrc: 'audio/play.mp3',\n        },\n        {\n          word: 'point',\n          translation: 'указывать',\n          image: 'img/point.jpg',\n          audioSrc: 'audio/point.mp3',\n        },\n        {\n          word: 'ride',\n          translation: 'ездить',\n          image: 'img/ride.jpg',\n          audioSrc: 'audio/ride.mp3',\n        },\n        {\n          word: 'run',\n          translation: 'бегать',\n          image: 'img/run.jpg',\n          audioSrc: 'audio/run.mp3',\n        },\n        {\n          word: 'sing',\n          translation: 'петь',\n          image: 'img/sing.jpg',\n          audioSrc: 'audio/sing.mp3',\n        },\n        {\n          word: 'skip',\n          translation: 'пропускать, прыгать',\n          image: 'img/skip.jpg',\n          audioSrc: 'audio/skip.mp3',\n        },\n        {\n          word: 'swim',\n          translation: 'плавать',\n          image: 'img/swim.jpg',\n          audioSrc: 'audio/swim.mp3',\n        },\n      ],\n    },\n    {\n      setName: 'Animal (set A)',\n      setPath: 'animal1',\n      data: [\n        {\n          word: 'cat',\n          translation: 'кот',\n          image: 'img/cat.jpg',\n          audioSrc: 'audio/cat.mp3',\n        },\n        {\n          word: 'chick',\n          translation: 'цыплёнок',\n          image: 'img/chick.jpg',\n          audioSrc: 'audio/chick.mp3',\n        },\n        {\n          word: 'chicken',\n          translation: 'курица',\n          image: 'img/chicken.jpg',\n          audioSrc: 'audio/chicken.mp3',\n        },\n        {\n          word: 'dog',\n          translation: 'собака',\n          image: 'img/dog.jpg',\n          audioSrc: 'audio/dog.mp3',\n        },\n        {\n          word: 'horse',\n          translation: 'лошадь',\n          image: 'img/horse.jpg',\n          audioSrc: 'audio/horse.mp3',\n        },\n        {\n          word: 'pig',\n          translation: 'свинья',\n          image: 'img/pig.jpg',\n          audioSrc: 'audio/pig.mp3',\n        },\n        {\n          word: 'rabbit',\n          translation: 'кролик',\n          image: 'img/rabbit.jpg',\n          audioSrc: 'audio/rabbit.mp3',\n        },\n        {\n          word: 'sheep',\n          translation: 'овца',\n          image: 'img/sheep.jpg',\n          audioSrc: 'audio/sheep.mp3',\n        },\n      ],\n    },\n    {\n      setName: 'Animal (set B)',\n      setPath: 'animal2',\n      data: [\n        {\n          word: 'bird',\n          translation: 'птица',\n          image: 'img/bird.jpg',\n          audioSrc: 'audio/bird.mp3',\n        },\n        {\n          word: 'fish',\n          translation: 'рыба',\n          image: 'img/fish1.jpg',\n          audioSrc: 'audio/fish.mp3',\n        },\n        {\n          word: 'frog',\n          translation: 'жаба',\n          image: 'img/frog.jpg',\n          audioSrc: 'audio/frog.mp3',\n        },\n        {\n          word: 'giraffe',\n          translation: 'жирафа',\n          image: 'img/giraffe.jpg',\n          audioSrc: 'audio/giraffe.mp3',\n        },\n        {\n          word: 'lion',\n          translation: 'лев',\n          image: 'img/lion.jpg',\n          audioSrc: 'audio/lion.mp3',\n        },\n        {\n          word: 'mouse',\n          translation: 'мышь',\n          image: 'img/mouse.jpg',\n          audioSrc: 'audio/mouse.mp3',\n        },\n        {\n          word: 'turtle',\n          translation: 'черепаха',\n          image: 'img/turtle.jpg',\n          audioSrc: 'audio/turtle.mp3',\n        },\n        {\n          word: 'dolphin',\n          translation: 'дельфин',\n          image: 'img/dolphin.jpg',\n          audioSrc: 'audio/dolphin.mp3',\n        },\n      ],\n    },\n    {\n      setName: 'Clothes',\n      setPath: 'clothes',\n      data: [\n        {\n          word: 'skirt',\n          translation: 'юбка',\n          image: 'img/skirt.jpg',\n          audioSrc: 'audio/skirt.mp3',\n        },\n        {\n          word: 'pants',\n          translation: 'брюки',\n          image: 'img/pants.jpg',\n          audioSrc: 'audio/pants.mp3',\n        },\n        {\n          word: 'blouse',\n          translation: 'блузка',\n          image: 'img/blouse.jpg',\n          audioSrc: 'audio/blouse.mp3',\n        },\n        {\n          word: 'dress',\n          translation: 'платье',\n          image: 'img/dress.jpg',\n          audioSrc: 'audio/dress.mp3',\n        },\n        {\n          word: 'boot',\n          translation: 'ботинок',\n          image: 'img/boot.jpg',\n          audioSrc: 'audio/boot.mp3',\n        },\n        {\n          word: 'shirt',\n          translation: 'рубашка',\n          image: 'img/shirt.jpg',\n          audioSrc: 'audio/shirt.mp3',\n        },\n        {\n          word: 'coat',\n          translation: 'пальто',\n          image: 'img/coat.jpg',\n          audioSrc: 'audio/coat.mp3',\n        },\n        {\n          word: 'shoe',\n          translation: 'туфли',\n          image: 'img/shoe.jpg',\n          audioSrc: 'audio/shoe.mp3',\n        },\n      ],\n    },\n    {\n      setName: 'Emotions',\n      setPath: 'emotions',\n      data: [\n        {\n          word: 'sad',\n          translation: 'грустный',\n          image: 'img/sad.jpg',\n          audioSrc: 'audio/sad.mp3',\n        },\n        {\n          word: 'angry',\n          translation: 'сердитый',\n          image: 'img/angry.jpg',\n          audioSrc: 'audio/angry.mp3',\n        },\n        {\n          word: 'happy',\n          translation: 'счастливый',\n          image: 'img/happy.jpg',\n          audioSrc: 'audio/happy.mp3',\n        },\n        {\n          word: 'tired',\n          translation: 'уставший',\n          image: 'img/tired.jpg',\n          audioSrc: 'audio/tired.mp3',\n        },\n        {\n          word: 'surprised',\n          translation: 'удивлённый',\n          image: 'img/surprised.jpg',\n          audioSrc: 'audio/surprised.mp3',\n        },\n        {\n          word: 'scared',\n          translation: 'испуганный',\n          image: 'img/scared.jpg',\n          audioSrc: 'audio/scared.mp3',\n        },\n        {\n          word: 'smile',\n          translation: 'улыбка',\n          image: 'img/smile.jpg',\n          audioSrc: 'audio/smile.mp3',\n        },\n        {\n          word: 'laugh',\n          translation: 'смех',\n          image: 'img/laugh.jpg',\n          audioSrc: 'audio/laugh.mp3',\n        },\n      ],\n    },\n    {\n      setName: 'Food',\n      setPath: 'food',\n      data: [\n        {\n          word: 'cookie',\n          translation: 'печенье',\n          image: 'img/cookie.jpg',\n          audioSrc: 'audio/cookie.mp3',\n        },\n        {\n          word: 'noodles',\n          translation: 'лапша',\n          image: 'img/noodles.jpg',\n          audioSrc: 'audio/noodles.mp3',\n        },\n        {\n          word: 'pancake',\n          translation: 'оладушек',\n          image: 'img/pancake.jpg',\n          audioSrc: 'audio/pancake.mp3',\n        },\n        {\n          word: 'pizza',\n          translation: 'пицца',\n          image: 'img/pizza.jpg',\n          audioSrc: 'audio/pizza.mp3',\n        },\n        {\n          word: 'salad',\n          translation: 'салат',\n          image: 'img/salad.jpg',\n          audioSrc: 'audio/salad.mp3',\n        },\n        {\n          word: 'taco',\n          translation: 'тако',\n          image: 'img/taco.jpg',\n          audioSrc: 'audio/taco.mp3',\n        },\n        {\n          word: 'cheese',\n          translation: 'сыр',\n          image: 'img/cheese.jpg',\n          audioSrc: 'audio/cheese.mp3',\n        },\n        {\n          word: 'hamburger',\n          translation: 'гамбургер',\n          image: 'img/hamburger.jpg',\n          audioSrc: 'audio/hamburger.mp3',\n        },\n      ],\n    },\n    {\n      setName: 'Places',\n      setPath: 'places',\n      data: [\n        {\n          word: 'beach',\n          translation: 'пляж',\n          image: 'img/beach.jpg',\n          audioSrc: 'audio/beach.mp3',\n        },\n        {\n          word: 'bridge',\n          translation: 'мост',\n          image: 'img/bridge.jpg',\n          audioSrc: 'audio/bridge.mp3',\n        },\n        {\n          word: 'desert',\n          translation: 'Пустыня',\n          image: 'img/desert.jpg',\n          audioSrc: 'audio/desert.mp3',\n        },\n        {\n          word: 'farm',\n          translation: 'ферма',\n          image: 'img/farm.jpg',\n          audioSrc: 'audio/farm.mp3',\n        },\n        {\n          word: 'office',\n          translation: 'офис',\n          image: 'img/office.jpg',\n          audioSrc: 'audio/office.mp3',\n        },\n        {\n          word: 'park',\n          translation: 'парк',\n          image: 'img/park.jpg',\n          audioSrc: 'audio/park.mp3',\n        },\n        {\n          word: 'forest',\n          translation: 'лес',\n          image: 'img/forest.jpg',\n          audioSrc: 'audio/forest.mp3',\n        },\n        {\n          word: 'city',\n          translation: 'город',\n          image: 'img/city.jpg',\n          audioSrc: 'audio/city.mp3',\n        },\n      ],\n    },\n  ]);\n  const { categoriesList } = useTypedSelector((state) => state.categoriesState);\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={() => <PageBuilder pageType=\"categories\" id={0} />} />\n            <Route path=\"/action1\" component={() => <PageBuilder pageType=\"cards\" id={0} />} />\n            <Route path=\"/action2\" component={() => <PageBuilder pageType=\"cards\" id={1} />} />\n            <Route path=\"/animal1\" component={() => <PageBuilder pageType=\"cards\" id={2} />} />\n            <Route path=\"/animal2\" component={() => <PageBuilder pageType=\"cards\" id={3} />} />\n            <Route path=\"/clothes\" component={() => <PageBuilder pageType=\"cards\" id={4} />} />\n            <Route path=\"/emotions\" component={() => <PageBuilder pageType=\"cards\" id={5} />} />\n            <Route path=\"/food\" component={() => <PageBuilder pageType=\"cards\" id={6} />} />\n            <Route path=\"/places\" component={() => <PageBuilder pageType=\"cards\" id={7} />} />\n            <Route path=\"/final\" component={() => <PageBuilder pageType=\"final-page\" id={0} />} />\n            <Route path=\"/stats\" component={() => <PageBuilder pageType=\"stats\" id={0} />} />\n          </Switch>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}